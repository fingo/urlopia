plugins {
    id "groovy"
    id "jacoco"
    id "java"
    id "org.springframework.boot" version "2.7.7" //if changed here, update in versions array
    id "org.sonarqube" version "3.3"
    id "com.gorylenko.gradle-git-properties" version "1.4.17"
    id "io.freefair.lombok" version "6.1.0-m3"
}

project.ext.set("mainViewModule", project(":view.react"))


allprojects {
    project.version = "4.0.0"
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
    }
}

repositories {
    mavenCentral()
    maven { url("https://repository.jboss.org/nexus/content/repositories/releases") }
}

ext {
    versions = [
            //spring
            springBoot   : '2.7.7', //if changed here update on plugins

            //oauth
            oauthJavaJwt : '4.2.1',
            oauthJwksRsa : '0.21.2',

            //mail
            handlebars   : '4.3.1',

            //excel
            apachePoi    : '5.2.3',

            //pdf
            itextPdf     : '5.5.13.3',

            //modelMapping
            modelMapper  : '3.1.1',

            //slack
            slackApiBolt : '1.27.2',

            //testing
            spock        : '2.0-groovy-3.0',

            //h2
            h2           : '2.1.214'


    ]
}


dependencies {
    implementation platform("org.springframework.boot:spring-boot-dependencies:${versions.springBoot}")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-mail")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-actuator")

    implementation("com.auth0:java-jwt:${versions.oauthJavaJwt}")
    implementation("com.auth0:jwks-rsa:${versions.oauthJwksRsa}")

    implementation("com.github.jknack:handlebars:${versions.handlebars}")

    implementation("org.apache.poi:poi:${versions.apachePoi}")
    implementation("org.apache.poi:poi-ooxml:${versions.apachePoi}")

    implementation("org.modelmapper:modelmapper:${versions.modelMapper}")

    implementation("com.itextpdf:itextpdf:${versions.itextPdf}")

    implementation("com.slack.api:bolt:${versions.slackApiBolt}")
    implementation("com.slack.api:bolt-servlet:${versions.slackApiBolt}")

    // Database migration
    implementation("org.flywaydb:flyway-core")

    runtimeOnly("org.postgresql:postgresql")
    developmentOnly("com.h2database:h2:${versions.h2}")

    testImplementation("org.spockframework:spock-core:${versions.spock}")
    testImplementation("org.codehaus.groovy:groovy")
}

test {
    useJUnitPlatform()
}

bootJar {
    archivesBaseName = 'urlopia'
    from("${mainViewModule.projectDir}/build") {
        into "public"
    }
}

springBoot {
    buildInfo()
}

import org.springframework.boot.gradle.tasks.run.BootRun
task bootRunWithView(type: BootRun) {
    group = "application"
    mainClass.set("info.fingo.urlopia.UrlopiaApplication")

    def defaultClasspath = sourceSets.main.runtimeClasspath
    def viewFiles = files("${mainViewModule.projectDir}")
    classpath = defaultClasspath + viewFiles
}

apply from: 'gradle/config/sonarqube.gradle'
