plugins {
    id "groovy"
    id "jacoco"
    id "java"
    id "org.springframework.boot" version "2.5.2"
    id "org.sonarqube" version "3.3"
    id "com.gorylenko.gradle-git-properties" version "1.4.17"
    id "io.freefair.lombok" version "6.1.0-m3"
}

project.ext.set("mainViewModule", project(":view.react"))


allprojects {
    project.version = "2.8.1"
}

java {
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled true
    }
}

repositories {
    mavenCentral()
    maven { url("https://repository.jboss.org/nexus/content/repositories/releases") }
}

dependencies {
    implementation platform("org.springframework.boot:spring-boot-dependencies:2.5.2")
    developmentOnly platform("org.springframework.boot:spring-boot-dependencies:2.5.2")

    developmentOnly('com.h2database:h2')
    developmentOnly('org.springframework.boot:spring-boot-devtools')
    implementation('javax.ejb:ejb-api:3.0')
    implementation('javax.jms:jms-api:1.1-rev-1')
    implementation('javax.resource:javax.resource-api:1.7')
    implementation('javax.servlet.jsp:jsp-api:2.2')
    implementation('javax.servlet.jsp.jstl:javax.servlet.jsp.jstl-api:1.2.1')
    implementation('javax.transaction:jta:1.1')
    implementation('org.hibernate:hibernate-java8:5.0.12.Final')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-mail')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('io.jsonwebtoken:jjwt:0.6.0')
    implementation('com.github.jknack:handlebars:4.0.6')
    implementation('org.apache.poi:poi:4.0.1')
    implementation('org.apache.poi:poi-ooxml:4.0.1')
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.1')
    implementation('org.modelmapper:modelmapper:2.1.1')
    implementation('com.itextpdf:itextpdf:5.5.13.2')
    implementation("com.slack.api:bolt:1.12.1")
    implementation("com.slack.api:bolt-servlet:1.12.1")

    runtimeOnly('org.postgresql:postgresql')

    testImplementation('org.spockframework:spock-core:2.0-groovy-3.0')
    testImplementation('org.codehaus.groovy:groovy')
}

test {
    useJUnitPlatform()
}

bootJar {
    archivesBaseName = 'urlopia'
    from("${mainViewModule.projectDir}/build") {
        into "public"
    }
}

springBoot {
    buildInfo()
}

import org.springframework.boot.gradle.tasks.run.BootRun
task bootRunWithView(type: BootRun) {
    group = "application"
    mainClass.set("info.fingo.urlopia.UrlopiaApplication")

    def defaultClasspath = sourceSets.main.runtimeClasspath
    def viewFiles = files("${mainViewModule.projectDir}")
    classpath = defaultClasspath + viewFiles
}

apply from: 'gradle/config/sonarqube.gradle'
